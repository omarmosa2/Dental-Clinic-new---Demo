/**
 * ุฅูุดุงุก ููุชุงุญ ุชุฑุฎูุต ููุนุฑู ุฌูุงุฒ ูุญุฏุฏ
 * Generate License Key for Specific Device ID
 */

const { generateForDevice } = require('../electron/deviceBoundLicenseGenerator.js')

/**
 * ุฅูุดุงุก ููุชุงุญ ููุนุฑู ุฌูุงุฒ ูุญุฏุฏ
 */
function generateKeyForSpecificDevice(deviceId, licenseType = 'STANDARD', region = 'GLOBAL') {
  try {
    console.log('๐ ุฅูุดุงุก ููุชุงุญ ุชุฑุฎูุต ูุฌูุงุฒ ูุญุฏุฏ...')
    console.log(`๐ป ูุนุฑู ุงูุฌูุงุฒ: ${deviceId.substring(0, 12)}...`)
    console.log(`๐ ููุน ุงูุชุฑุฎูุต: ${licenseType}`)
    console.log(`๐ ุงูููุทูุฉ: ${region}`)
    console.log('')

    const license = generateForDevice(deviceId, {
      licenseType: licenseType,
      region: region,
      purpose: 'customer-specific',
      generatedBy: 'manual-request'
    })

    console.log('โ ุชู ุฅูุดุงุก ุงูููุชุงุญ ุจูุฌุงุญ!')
    console.log('')
    console.log('๐ ุชูุงุตูู ุงูุชุฑุฎูุต:')
    console.log('=' .repeat(50))
    console.log(`๐ ุงูููุชุงุญ: ${license.licenseKey}`)
    console.log(`๐ป ูุนุฑู ุงูุฌูุงุฒ: ${license.deviceId}`)
    console.log(`๐ ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${new Date(license.generatedAt).toLocaleString('ar-SA')}`)
    console.log(`๐ ููุน ุงูุชุฑุฎูุต: ${license.metadata.licenseType}`)
    console.log(`๐ ุงูููุทูุฉ: ${license.metadata.region}`)
    console.log(`โฐ ุตุงูุญ: ูุฏู ุงูุญูุงุฉ`)
    console.log(`๐ ูุฑุชุจุท ุจุงูุฌูุงุฒ: ูุนู`)
    console.log('=' .repeat(50))
    console.log('')
    console.log('๐ง ุฃุฑุณู ูุฐุง ุงูููุชุงุญ ููุนููู:')
    console.log('๐ฏ ' + license.licenseKey)
    console.log('')
    console.log('๐ก ููุงุญุธุงุช ููุนููู:')
    console.log('   โข ูุฐุง ุงูููุชุงุญ ูุนูู ุนูู ุฌูุงุฒู ููุท')
    console.log('   โข ุฃุฏุฎู ุงูููุชุงุญ ูู ุดุงุดุฉ ุชูุนูู ุงูุชุฑุฎูุต')
    console.log('   โข ุงูุชุฑุฎูุต ุตุงูุญ ูุฏู ุงูุญูุงุฉ')
    console.log('   โข ูุง ูุญุชุงุฌ ุงุชุตุงู ุฅูุชุฑูุช ููุชูุนูู')

    return license

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูููุชุงุญ:', error.message)
    throw error
  }
}

/**
 * ุฅูุดุงุก ุนุฏุฉ ููุงุชูุญ ูุฃุฌูุฒุฉ ูุฎุชููุฉ
 */
function generateKeysForMultipleDevices(deviceIds, licenseType = 'STANDARD', region = 'GLOBAL') {
  console.log('๐ ุฅูุดุงุก ููุงุชูุญ ุชุฑุฎูุต ูุนุฏุฉ ุฃุฌูุฒุฉ...')
  console.log(`๐ ุนุฏุฏ ุงูุฃุฌูุฒุฉ: ${deviceIds.length}`)
  console.log(`๐ ููุน ุงูุชุฑุฎูุต: ${licenseType}`)
  console.log(`๐ ุงูููุทูุฉ: ${region}`)
  console.log('')

  const licenses = []

  deviceIds.forEach((deviceId, index) => {
    try {
      console.log(`๐ฑ ุงูุฌูุงุฒ ${index + 1}/${deviceIds.length}: ${deviceId.substring(0, 12)}...`)
      
      const license = generateForDevice(deviceId, {
        licenseType: licenseType,
        region: region,
        purpose: 'bulk-generation',
        batchIndex: index + 1
      })

      licenses.push({
        deviceId: deviceId,
        licenseKey: license.licenseKey,
        metadata: license.metadata,
        generatedAt: license.generatedAt
      })

      console.log(`   ๐ ุงูููุชุงุญ: ${license.licenseKey}`)

    } catch (error) {
      console.error(`   โ ุฎุทุฃ ูู ุงูุฌูุงุฒ ${index + 1}: ${error.message}`)
    }
  })

  console.log('')
  console.log('โ ุชู ุฅูุดุงุก ุฌููุน ุงูููุงุชูุญ!')
  console.log(`๐ ูุฌุญ: ${licenses.length}/${deviceIds.length}`)

  return licenses
}

/**
 * ุนุฑุถ ุชุนูููุงุช ุงูุงุณุชุฎุฏุงู
 */
function displayUsage() {
  console.log('๐ ุฃุฏุงุฉ ุฅูุดุงุก ููุชุงุญ ุชุฑุฎูุต ูุฌูุงุฒ ูุญุฏุฏ')
  console.log('=' .repeat(60))
  console.log('')
  console.log('๐ง ุงูุงุณุชุฎุฏุงู:')
  console.log('   node scripts/generateKeyForDevice.js [ูุนุฑู_ุงูุฌูุงุฒ] [ููุน_ุงูุชุฑุฎูุต] [ุงูููุทูุฉ]')
  console.log('')
  console.log('๐ ุงููุนุงููุงุช:')
  console.log('   ูุนุฑู_ุงูุฌูุงุฒ    - ูุนุฑู ุงูุฌูุงุฒ ุงูุฐู ุญุตูุช ุนููู ูู ุงูุนููู (ูุทููุจ)')
  console.log('   ููุน_ุงูุชุฑุฎูุต    - ููุน ุงูุชุฑุฎูุต (ุงุฎุชูุงุฑูุ ุงูุชุฑุงุถู: STANDARD)')
  console.log('   ุงูููุทูุฉ        - ุงูููุทูุฉ ุงูุฌุบุฑุงููุฉ (ุงุฎุชูุงุฑูุ ุงูุชุฑุงุถู: GLOBAL)')
  console.log('')
  console.log('๐ ุฃููุงุน ุงูุชุฑุงุฎูุต ุงููุชุงุญุฉ:')
  console.log('   STANDARD      - ุชุฑุฎูุต ุนุงุฏู')
  console.log('   PROFESSIONAL  - ุชุฑุฎูุต ุงุญุชุฑุงูู')
  console.log('   ENTERPRISE    - ุชุฑุฎูุต ูุคุณุณู')
  console.log('   PREMIUM       - ุชุฑุฎูุต ูููุฒ')
  console.log('   ULTIMATE      - ุชุฑุฎูุต ุดุงูู')
  console.log('')
  console.log('๐ ุงูููุงุทู ุงููุชุงุญุฉ:')
  console.log('   GLOBAL        - ุนุงููู')
  console.log('   SAUDI         - ุงูุณุนูุฏูุฉ')
  console.log('   UAE           - ุงูุฅูุงุฑุงุช')
  console.log('   KUWAIT        - ุงููููุช')
  console.log('   QATAR         - ูุทุฑ')
  console.log('   BAHRAIN       - ุงูุจุญุฑูู')
  console.log('   OMAN          - ุนูุงู')
  console.log('   GCC           - ุฏูู ุงูุฎููุฌ')
  console.log('   MENA          - ุงูุดุฑู ุงูุฃูุณุท ูุดูุงู ุฃูุฑูููุง')
  console.log('')
  console.log('๐ก ุฃูุซูุฉ:')
  console.log('   # ููุชุงุญ ุนุงุฏู ุนุงููู')
  console.log('   node scripts/generateKeyForDevice.js 40677b86a3f4d164d1d5e8f9a2b3c4d5')
  console.log('')
  console.log('   # ููุชุงุญ ุงุญุชุฑุงูู ุณุนูุฏู')
  console.log('   node scripts/generateKeyForDevice.js 40677b86a3f4d164d1d5e8f9a2b3c4d5 PROFESSIONAL SAUDI')
  console.log('')
  console.log('   # ููุชุงุญ ูููุฒ ุฅูุงุฑุงุชู')
  console.log('   node scripts/generateKeyForDevice.js 40677b86a3f4d164d1d5e8f9a2b3c4d5 PREMIUM UAE')
  console.log('')
  console.log('๐ ููููุฉ ุงูุญุตูู ุนูู ูุนุฑู ุงูุฌูุงุฒ:')
  console.log('   1. ุงูุนููู ูุดุบู ุงูุชุทุจูู')
  console.log('   2. ูุธูุฑ ูุนุฑู ุงูุฌูุงุฒ ูู ุดุงุดุฉ ุชูุนูู ุงูุชุฑุฎูุต')
  console.log('   3. ุงูุนููู ููุณุฎ ุงููุนุฑู ููุฑุณูู ูู')
  console.log('   4. ุชุณุชุฎุฏู ูุฐู ุงูุฃุฏุงุฉ ูุฅูุดุงุก ููุชุงุญ ูุฎุตุต')
  console.log('   5. ุชุฑุณู ุงูููุชุงุญ ููุนููู')
}

/**
 * ุงูุชุญูู ูู ุตุญุฉ ูุนุฑู ุงูุฌูุงุฒ
 */
function validateDeviceId(deviceId) {
  if (!deviceId || typeof deviceId !== 'string') {
    return false
  }

  // ูุฌุจ ุฃู ูููู 32 ุญุฑู hex
  const regex = /^[a-f0-9]{32}$/i
  return regex.test(deviceId)
}

/**
 * ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
 */
function main() {
  const args = process.argv.slice(2)
  
  if (args.length === 0 || args[0] === 'help' || args[0] === '--help' || args[0] === '-h') {
    displayUsage()
    return
  }

  const deviceId = args[0]
  const licenseType = args[1] || 'STANDARD'
  const region = args[2] || 'GLOBAL'

  // ุงูุชุญูู ูู ุตุญุฉ ูุนุฑู ุงูุฌูุงุฒ
  if (!validateDeviceId(deviceId)) {
    console.error('โ ูุนุฑู ุงูุฌูุงุฒ ุบูุฑ ุตุงูุญ!')
    console.error('๐ก ูุฌุจ ุฃู ูููู ูุนุฑู ุงูุฌูุงุฒ ูููู ูู 32 ุญุฑู hex')
    console.error('๐ ูุซุงู ุตุญูุญ: 40677b86a3f4d164d1d5e8f9a2b3c4d5')
    console.error('')
    console.error('๐ ููุญุตูู ุนูู ุงูุชุนูููุงุช ุงููุงููุฉ:')
    console.error('   node scripts/generateKeyForDevice.js help')
    process.exit(1)
  }

  // ุงูุชุญูู ูู ููุน ุงูุชุฑุฎูุต
  const validLicenseTypes = ['STANDARD', 'PROFESSIONAL', 'ENTERPRISE', 'PREMIUM', 'ULTIMATE']
  if (!validLicenseTypes.includes(licenseType.toUpperCase())) {
    console.error(`โ ููุน ุงูุชุฑุฎูุต ุบูุฑ ุตุงูุญ: ${licenseType}`)
    console.error(`๐ ุงูุฃููุงุน ุงููุชุงุญุฉ: ${validLicenseTypes.join(', ')}`)
    process.exit(1)
  }

  // ุงูุชุญูู ูู ุงูููุทูุฉ
  const validRegions = ['GLOBAL', 'SAUDI', 'UAE', 'KUWAIT', 'QATAR', 'BAHRAIN', 'OMAN', 'GCC', 'MENA']
  if (!validRegions.includes(region.toUpperCase())) {
    console.error(`โ ุงูููุทูุฉ ุบูุฑ ุตุงูุญุฉ: ${region}`)
    console.error(`๐ ุงูููุงุทู ุงููุชุงุญุฉ: ${validRegions.join(', ')}`)
    process.exit(1)
  }

  try {
    generateKeyForSpecificDevice(deviceId, licenseType.toUpperCase(), region.toUpperCase())
  } catch (error) {
    console.error('โ ูุดู ูู ุฅูุดุงุก ุงูููุชุงุญ:', error.message)
    process.exit(1)
  }
}

// ุชุดุบูู ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
if (require.main === module) {
  main()
}

module.exports = {
  generateKeyForSpecificDevice,
  generateKeysForMultipleDevices,
  validateDeviceId
}
